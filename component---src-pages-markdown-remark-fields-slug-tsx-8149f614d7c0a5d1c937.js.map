{"version":3,"file":"component---src-pages-markdown-remark-fields-slug-tsx-8149f614d7c0a5d1c937.js","mappings":"2GAEMA,GAAS,E,QAAA,yCAMH,SAACC,GAAD,OAAWA,EAAMC,QAAU,WANxB,aAOF,SAACD,GAAD,OAAWA,EAAME,SAAW,UAP1B,eAQA,SAACF,GAAD,OAAWA,EAAMG,UAAY,WAR7B,gBASC,SAACH,GAAD,OAAWA,EAAMI,OAAS,UAT3B,KAYf,O,wHCVWC,EAAa,2CAGbC,EAAY,0CACZC,EAAgB,8C,oBCkD3B,EA/CgD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACzCC,EAD8D,EAAXC,KACnDD,eACAE,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KAEhB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,SAAD,MACED,EAAAA,EAAAA,IAACE,EAAAA,EAAD,CAAQP,SAAUA,EAAUQ,ODXhB,uCCYVH,EAAAA,EAAAA,IAACI,EAAAA,EAAD,CAAKC,MAAOP,EAAOO,MAAOC,YAAaR,EAAOQ,eAC9CN,EAAAA,EAAAA,IAACd,EAAAA,EAAD,MACEc,EAAAA,EAAAA,IAACO,EAAAA,EAAD,MACEP,EAAAA,EAAAA,IAACO,EAAAA,EAAAA,KAAD,CAAiBC,KAAK,KAAtB,WACAR,EAAAA,EAAAA,IAACO,EAAAA,EAAAA,KAAD,CAAiBC,KAAK,cAAtB,WACAR,EAAAA,EAAAA,IAACO,EAAAA,EAAAA,KAAD,CAAiBE,QAAM,GAAvB,UAEFT,EAAAA,EAAAA,IAAAA,KAAAA,KAAKF,EAAOO,QACZL,EAAAA,EAAAA,IAAAA,IAAAA,CAAGU,GDxBK,uCCyBNV,EAAAA,EAAAA,IAAAA,OAAAA,CAAMW,UAAWC,GAAjB,QACAZ,EAAAA,EAAAA,IAAAA,OAAAA,CAAMW,UAAWC,GAAmBd,EAAOe,OAC3Cb,EAAAA,EAAAA,IAAAA,KAAAA,OACAA,EAAAA,EAAAA,IAAAA,OAAAA,CAAMW,UAAWC,GAAjB,QACAZ,EAAAA,EAAAA,IAAAA,OAAAA,CAAMW,UAAWC,GAAmBd,EAAOgB,eAE7Cd,EAAAA,EAAAA,IAAAA,IAAAA,CAAGU,GD9BY,6CC8BaZ,EAAOQ,cACnCN,EAAAA,EAAAA,IAAAA,KAAAA,OACAA,EAAAA,EAAAA,IAAAA,MAAAA,CACEW,UDnCS,wCCoCTI,wBAAyB,CAAEC,OAAQjB,MAErCC,EAAAA,EAAAA,IAAAA,KAAAA,OACAA,EAAAA,EAAAA,IAACiB,EAAAA,KAAD,CACEC,GAAG,IACHP,UAAS,6BAA+BC,GAF1C,YAMAZ,EAAAA,EAAAA,IAACiB,EAAAA,KAAD,CACEC,GAAG,aACHP,UAAS,6BAA+BC,GAF1C","sources":["webpack://website/./src/components/atoms/container.tsx","webpack://website/./src/styles/pages/MarkdownRemark.module.scss","webpack://website/./src/pages/{MarkdownRemark.fields__slug}.tsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nconst Container = styled.div<{\n  maxWidth?: string\n  margin?: string\n  padding?: string\n  align?: string\n}>`\n  margin: ${(props) => props.margin || '0 auto'};\n  padding: ${(props) => props.padding || '0 4vw'};\n  max-width: ${(props) => props.maxWidth || '1120px'};\n  text-align: ${(props) => props.align || 'unset'};\n`\n\nexport default Container\n","// extracted by mini-css-extract-plugin\nexport var article = \"MarkdownRemark-module--article--4gkZs\";\nexport var date = \"MarkdownRemark-module--date--c0A-S\";\nexport var description = \"MarkdownRemark-module--description--l70rP\";\nexport var footer_btn = \"MarkdownRemark-module--footer_btn--09QAe\";\nexport var highlight = \"MarkdownRemark-module--highlight--POlNq\";\nexport var main = \"MarkdownRemark-module--main--YHS4s\";\nexport var post_date = \"MarkdownRemark-module--post_date--2nfTC\";\nexport var post_date_tag = \"MarkdownRemark-module--post_date_tag--OlI+G\";","import { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport { Breadcrumb } from 'react-bootstrap'\n\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport 'prismjs/themes/prism.css'\nimport Container from 'src/components/atoms/container'\nimport Layout from 'src/components/layout'\nimport * as Styles from 'src/styles/pages/MarkdownRemark.module.scss'\nimport SEO from 'src/utils/seo'\n\nconst MarkdownArticle_template: React.FC<any> = ({ location, data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { fields, html } = markdownRemark\n\n  return (\n    <React.Fragment>\n      <Layout location={location} styles={Styles.main}>\n        <SEO title={fields.title} description={fields.description} />\n        <Container>\n          <Breadcrumb>\n            <Breadcrumb.Item href='/'>トップページ</Breadcrumb.Item>\n            <Breadcrumb.Item href='/articles/'>投稿記事一覧</Breadcrumb.Item>\n            <Breadcrumb.Item active>この記事</Breadcrumb.Item>\n          </Breadcrumb>\n          <h1>{fields.title}</h1>\n          <p id={Styles.date}>\n            <span className={Styles.post_date_tag}>公開日</span>\n            <span className={Styles.post_date}>{fields.date}</span>\n            <br />\n            <span className={Styles.post_date_tag}>更新日</span>\n            <span className={Styles.post_date}>{fields.last_update}</span>\n          </p>\n          <p id={Styles.description}>{fields.description}</p>\n          <hr />\n          <div\n            className={Styles.article}\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n          <hr />\n          <Link\n            to='/'\n            className={`btn btn-outline-secondary ${Styles.footer_btn}`}\n          >\n            トップページへ\n          </Link>\n          <Link\n            to='/articles/'\n            className={`btn btn-outline-secondary ${Styles.footer_btn}`}\n          >\n            記事一覧ページへ\n          </Link>\n        </Container>\n      </Layout>\n    </React.Fragment>\n  )\n}\n\nexport default MarkdownArticle_template\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      fields {\n        date(formatString: \"YYYY.MM.DD\")\n        last_update(formatString: \"YYYY.MM.DD\")\n        slug\n        title\n        description\n      }\n    }\n  }\n`\n"],"names":["Container","props","margin","padding","maxWidth","align","footer_btn","post_date","post_date_tag","location","markdownRemark","data","fields","html","___EmotionJSX","React","Layout","styles","SEO","title","description","Breadcrumb","href","active","id","className","Styles","date","last_update","dangerouslySetInnerHTML","__html","Link","to"],"sourceRoot":""}